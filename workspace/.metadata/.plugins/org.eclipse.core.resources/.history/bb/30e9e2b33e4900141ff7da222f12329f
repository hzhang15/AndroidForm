package com.foxitsample.formfiled;

import com.foxitsample.exception.parameterException;
import com.foxitsample.pdfLib.PDFDocument;

import FoxitEMBSDK.EMBJavaSupport;
import FoxitEMBSDK.EMBJavaSupport.PointF;
import FoxitEMBSDK.EMBJavaSupport.RectangleF;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Rect;
import android.graphics.RectF;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;

public class testActivity extends Activity {
	private SeekBar seekBar1;
    private TextView textview1;
    private SeekBar seekBar2;
    private TextView textview2;
    private SeekBar seekBar3;
    private TextView textview3;
    private SeekBar seekBar4;
    private TextView textview4;
    private SeekBar seekBar5;
    private TextView textview5;
    private SeekBar seekBar6;
    private TextView textview6;
    private SeekBar seekBar7;
    private TextView textview7;
    private SeekBar seekBar8;
    private TextView textview8;
    private ImageView testimage;
    private Button mainbutton;
    private static final String fileName = "/mnt/sdcard/HS-268%20Water%20Heater%20-%20Agreement.pdf";
    //private static final String fileName ="/mnt/sdcard/FoxitForm.pdf";
    public PDFDocument doc=null;
    public void onCreate(Bundle savedInstanceState) {    	         
    	super.onCreate(savedInstanceState);
    	setContentView(R.layout.test);
		
    	seekBar1=(SeekBar)findViewById(R.id.seekBar1);
    	seekBar2=(SeekBar)findViewById(R.id.seekBar2);
    	seekBar3=(SeekBar)findViewById(R.id.seekBar3);
    	seekBar4=(SeekBar)findViewById(R.id.seekBar4);
    	//seekBar5=(SeekBar)findViewById(R.id.seekBar5);
    	//seekBar6=(SeekBar)findViewById(R.id.seekBar6);
    	seekBar7=(SeekBar)findViewById(R.id.seekBar7);
    	seekBar8=(SeekBar)findViewById(R.id.seekBar8);
    	textview1=(TextView)findViewById(R.id.textview1);
    	textview2=(TextView)findViewById(R.id.textview2);
    	textview3=(TextView)findViewById(R.id.textview3);
    	textview4=(TextView)findViewById(R.id.textview4);
    	//textview5=(TextView)findViewById(R.id.textview5);
    	//textview6=(TextView)findViewById(R.id.textview6);
    	textview7=(TextView)findViewById(R.id.textview7);
    	textview8=(TextView)findViewById(R.id.textview8);
    	testimage=(ImageView)findViewById(R.id.testimage); 
    	mainbutton=(Button)findViewById(R.id.mainbutton);
    	textview1.setText(seekBar1.getProgress() + "/" + seekBar1.getMax());
    	textview2.setText(seekBar1.getProgress() + "/" + seekBar2.getMax());
    	textview3.setText(seekBar1.getProgress() + "/" + seekBar3.getMax());
    	textview4.setText(seekBar1.getProgress() + "/" + seekBar4.getMax());
    	//textview5.setText(seekBar1.getProgress() + "/" + seekBar5.getMax());
    	//textview6.setText(seekBar1.getProgress() + "/" + seekBar6.getMax());
    	textview7.setText(seekBar1.getProgress() + "/" + seekBar7.getMax());
    	textview8.setText(seekBar1.getProgress() + "/" + seekBar8.getMax());
    	doc = new PDFDocument(fileName,this);
    	testimage.setFocusable(true);
    	testimage.setFocusableInTouchMode(true);
    	seekBar1.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
    		int progress = 0;
    		@Override
    		public void onProgressChanged(SeekBar seekBar, int progresValue, boolean fromUser) 
    		{
    			progress = progresValue;
    		}
    		public void onStartTrackingTouch(SeekBar seekBar)
    		{
    			
    		}
    		@Override
    		public void onStopTrackingTouch(SeekBar seekBar) 
    		{
    			textview1.setText(progress + "/" + seekBar.getMax()); 		
    		};
    	});
    	seekBar2.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
    		int progress = 0;
    		@Override
    		public void onProgressChanged(SeekBar seekBar, int progresValue, boolean fromUser) 
    		{
    			progress = progresValue;
    		}
    		public void onStartTrackingTouch(SeekBar seekBar)
    		{
    			
    		}
    		@Override
    		public void onStopTrackingTouch(SeekBar seekBar) 
    		{
    			textview2.setText(progress + "/" + seekBar.getMax()); 		
    		};
    	});
    	seekBar3.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
    		int progress = 0;
    		@Override
    		public void onProgressChanged(SeekBar seekBar, int progresValue, boolean fromUser) 
    		{
    			progress = progresValue;
    		}
    		public void onStartTrackingTouch(SeekBar seekBar)
    		{
    			
    		}
    		@Override
    		public void onStopTrackingTouch(SeekBar seekBar) 
    		{
    			textview3.setText(progress + "/" + seekBar.getMax()); 		
    		};
    	});
    	seekBar4.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
    		int progress = 0;
    		@Override
    		public void onProgressChanged(SeekBar seekBar, int progresValue, boolean fromUser) 
    		{
    			progress = progresValue;
    		}
    		public void onStartTrackingTouch(SeekBar seekBar)
    		{
    			
    		}
    		@Override
    		public void onStopTrackingTouch(SeekBar seekBar) 
    		{
    			textview4.setText(progress + "/" + seekBar.getMax()); 		
    		};
    	});
    	seekBar7.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
    		int progress = 0;
    		@Override
    		public void onProgressChanged(SeekBar seekBar, int progresValue, boolean fromUser) 
    		{
    			progress = progresValue;
    		}
    		public void onStartTrackingTouch(SeekBar seekBar)
    		{
    			
    		}
    		@Override
    		public void onStopTrackingTouch(SeekBar seekBar) 
    		{
    			textview7.setText(progress + "/" + seekBar.getMax()); 		
    		};
    	});
    	seekBar8.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
    		int progress = 0;
    		@Override
    		public void onProgressChanged(SeekBar seekBar, int progresValue, boolean fromUser) 
    		{
    			progress = progresValue;
    		}
    		public void onStartTrackingTouch(SeekBar seekBar)
    		{
    			
    		}
    		@Override
    		public void onStopTrackingTouch(SeekBar seekBar) 
    		{
    			textview8.setText(progress + "/" + seekBar.getMax()); 		
    		};
    	});
    	
        boolean nRet=false;
		try {
			nRet = doc.InitFoxitFixedMemory();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
  		if (nRet != true){
  			return;
  		}
  		nRet = doc.InitPDFDoc();
  		if (nRet != true){
  			return;
  		}
  		
 		int nPageCount = doc.GetPageCounts();
  		
  		nRet = doc.InitPDFPage(0);
  		if (nRet != true){
  			return;
  		}
    	
    	mainbutton.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				//Intent intent1 = new Intent(getApplicationContext(),mainActivity.class);
			    //startActivity(intent1);
					
				Rect rect = new Rect();
				rect.left = seekBar1.getProgress();
				rect.top = seekBar2.getProgress();
				rect.right = seekBar1.getProgress() + seekBar3.getProgress();
				rect.bottom = seekBar2.getProgress() + seekBar4.getProgress();
				int pwscale=seekBar7.getProgress();
				int phscale=seekBar8.getProgress();
				/*if (doc.nPDFCurPageHandler!=0)
				{
					doc.ClosePDFPage();	
				}
				if (doc.nPDFDocHandler != 0)
				{   
					doc.ClosePDFDoc();
				    doc.DestroyFoxitFixedMemory();	    
				}*/
				testimage.setImageBitmap(doc.generateImage(0,pwscale,phscale,rect));
				
			}
		});
    	testimage.setOnTouchListener(new View.OnTouchListener() {
			
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				// TODO Auto-generated method stub
				int actionType=event.getAction()&MotionEvent.ACTION_MASK;
				int actionId=event.getAction()&MotionEvent.ACTION_POINTER_ID_MASK;
				actionId=actionId>>8;  
				
				PointF point = new EMBJavaSupport().new PointF();
				point.x = event.getX();
				point.y = event.getY();	
				int startx=-seekBar1.getProgress();
				int starty=-seekBar2.getProgress();
				int size_x= (int)doc.GetPageSizeX(doc.getCurPDFPageHandler())*seekBar7.getProgress();
				int size_y= (int)doc.GetPageSizeY(doc.getCurPDFPageHandler())*seekBar8.getProgress();
				EMBJavaSupport.FPDFPageDeviceToPagePointF(doc.getCurPDFPageHandler(), startx,starty,size_x , size_y, 0, point);
				
				switch(actionType){
				case MotionEvent.ACTION_MOVE://
					EMBJavaSupport.FPDFFormFillOnMouseMove(doc.getPDFFormHandler(), doc.getCurPDFPageHandler(), 0, point.x, point.y);
					break;
				case MotionEvent.ACTION_DOWN:	//	
					EMBJavaSupport.FPDFFormFillOnMouseMove(doc.getPDFFormHandler(), doc.getCurPDFPageHandler(), 0, point.x, point.y);
					EMBJavaSupport.FPDFFormFillOnLButtonDown(doc.getPDFFormHandler(), doc.getCurPDFPageHandler(), 0, point.x, point.y);
					break;
				case MotionEvent.ACTION_UP:	//
					EMBJavaSupport.FPDFFormFillOnLButtonUp(doc.getPDFFormHandler(), doc.getCurPDFPageHandler(), 0, point.x, point.y);
					break;
				}
				return true;
			}
		});
    }
        public void createAndroidTextField(String text){
			
			Intent intent = new Intent();
			Bundle bundle = new Bundle();
			bundle.putString("textValue", text);
			intent.setClass(this, textfieldActivity.class);
			intent.putExtra("key", bundle);
			this.startActivityForResult(intent, 0);			
		}
        public void invalidate(float left, float top, float right, float bottom){
			int l, t, r, b;
			RectangleF rect = new EMBJavaSupport().new RectangleF();
			rect.left = left;
			rect.top = top;
			rect.right = right;
			rect.bottom = bottom;
			int startx=-seekBar1.getProgress();
			int starty=-seekBar2.getProgress();
			int size_x= (int)doc.GetPageSizeX(doc.getCurPDFPageHandler())*seekBar7.getProgress();
			int size_y= (int)doc.GetPageSizeY(doc.getCurPDFPageHandler())*seekBar8.getProgress();
			EMBJavaSupport.FPDFPagePageToDeviceRectF(doc.getCurPDFPageHandler(), startx, starty,size_x , size_y, 0, rect);
			l = (int)rect.left;
			t = (int)rect.top;
			r = (int)rect.right;
			b = (int)rect.bottom;
			Rect rc = new Rect(l,t,r,b);			
			testimage.setImageBitmap(doc.getDirtyBitmap(rc, seekBar7.getProgress(), seekBar8.getProgress()));
			
		}
        
        protected void onDestroy() {
        	// TODO Auto-generated method stub
        				
        		boolean nRet = doc.ClosePDFPage();
        		if (nRet != false){
        			System.exit(0);
        		}
        		
        		nRet = doc.ClosePDFDoc();
        		if (nRet != false){
        			System.exit(0);
        		}
        		
        		nRet = doc.DestroyFoxitFixedMemory();
        		if (nRet != false){
        			System.exit(0);
        		}
        		
        		super.onDestroy();
        		
        }   


}
